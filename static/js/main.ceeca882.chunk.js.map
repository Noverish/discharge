{"version":3,"sources":["models/index.ts","envs.ts","components/Header.tsx","utils/date-util.ts","utils/process-person.ts","components/WelcomeOverlay.tsx","components/InfoPane.tsx","components/PeopleRow.tsx","components/PeopleTable.tsx","App.tsx","index.tsx"],"names":["Rank","CORPORAL_REDUCE_DATE","Date","PRIVATE_FIRST_REDUCE_DATE","PRIVATE_REDUCE_DATE","className","navClasses","classnames","href","type","data-toggle","data-target","id","target","rel","cloneAndSet12AM","date","clone","setHours","setMinutes","setSeconds","setMilliseconds","dateToString","year","getFullYear","month","getMonth","toString","padStart","day","getDate","addMonth","months","setMonth","addDay","days","setDate","addSecond","seconds","getSeconds","monthDiff","date2","date1","dayDiff","date1Clone","date2Clone","Math","ceil","getTime","secondDiff","floor","setDay1AndMidnight","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","secondsToString","sec","minutes","min","hours","hour","calcMaxGrade","rank","join","private","privateFirst","corporal","Error","processPerson","person","now","promotionDates","transfer","discharge","penalty","forEach","v","privatePenalty","privateFirstPenalty","corporalPenalty","privateMaxGrade","privateFirstMaxGrade","corporalMaxGrade","dateUtil","sergeant","calcPromotionDates","dates","human","trainee","grade","broken","totalSergeantDays","fulfilled","calcStatus","rankString","rankToKorean","daysTotal","daysPast","daysLeft","max","secondsTotal","secondsPast","secondsLeft","rate","percent","toFixed","name","WelcomeStatus","canDischarge","toUpperCase","index","isMe","active","includes","progressParentClasses","progressClasses","textInside","parseInt","progressTextClass","progressTextContent","progressText","me","style","width","rows","persons","map","i","PeopleRow","key","status","onTransitionEnd","blurLevel","titleClasses","dateClasses","textShadow","App","useState","showing","welcomeStatus","setWelcomeStatus","people","setPeople","setNow","useEffect","axios","url","then","res","data","setInterval","n","setTimeout","closing","onRangeChnage","useCallback","e","value","filter","p","processToPerson","length","WelcomeOverlay","closed","Header","blur","marginTop","InfoPane","toLocaleString","onChange","PeopleTable","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ceeca882.chunk.js","sourcesContent":["export interface PersonDao {\n  name: string;\n  join: string;\n  transfer: string;\n  discharge: string;\n  penalty: number[];\n}\n\nexport enum Rank {\n  human = 'human',\n  trainee = 'trainee',\n  private = 'private',\n  privateFirst = 'private-first',\n  corporal = 'corporal',\n  sergeant = 'sergeant',\n  fulfilled = 'fulfilled',\n}\n\nexport interface Person {\n  name: string;\n  join: Date;\n  transfer: Date;\n  discharge: Date;\n  rank: Rank;\n  rankString: string;\n  grade?: number;\n  broken?: boolean;\n  daysTotal: number;\n  daysPast: number;\n  daysLeft: number;\n  secondsTotal: number;\n  secondsPast: number;\n  secondsLeft: number;\n  percent: string;\n}\n","// 호봉: grade\n// 계급: level, rank\n// 진급: promote\n// 전입: transfer\n// 입대: join\n\nexport const FULFILLED_REMAIN_DAYS = 7; // 전역 후 그래프에 남겨 놓는 날짜 수\nexport const WELCOME_SHOW_MILLIS = 1800;\nexport const CAN_DISCHARGE_DAY = 31;\nexport const DISCHARGE_START_DATE = '2016-11-11';\n\n// 2018년  4월 군번부터 상병이 6호봉\n// 2018년 11월 군번부터 일병이 6호봉\n// 2019년  6월 군번부터 이병이 3호봉\nexport const CORPORAL_REDUCE_DATE = new Date('2018-04-01');\nexport const PRIVATE_FIRST_REDUCE_DATE = new Date('2018-11-01');\nexport const PRIVATE_REDUCE_DATE = new Date('2019-06-01');\n\n// 이병 최대 호봉: 3\n// 일병 최대 호봉: 6\n// 상병 최대 호봉: 6\nexport const PRIVATE_MAX_GRADE = 3;\nexport const PRIVATE_FIRST_MAX_GRADE = 6;\nexport const CORPORAL_MAX_GRADE = 6;\n","import React from 'react';\nimport classnames from 'classnames';\n\ninterface Props {\n  className?: string;\n}\n\nexport default ({ className }: Props) => {\n  const navClasses = classnames('navbar navbar-default navbar-fixed-top', className);\n\n  return (\n    <nav className={navClasses}>\n      <div className=\"container-fluid\">\n        <div className=\"navbar-header\">\n          <a href=\"/\" className=\"navbar-brand\">정신과 시간의 방</a>\n          <button className=\"navbar-toggle\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar-main\">\n            <span className=\"icon-bar\" />\n            <span className=\"icon-bar\" />\n            <span className=\"icon-bar\" />\n          </button>\n        </div>\n        <div className=\"navbar-collapse collapse\" id=\"navbar-main\">\n          <ul className=\"nav navbar-nav navbar-right\">\n            <li><a href=\"http://github/Noverish/discharge\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-link\">Github</a></li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","function cloneAndSet12AM(date: Date): Date {\n  const clone = new Date(date);\n  clone.setHours(0);\n  clone.setMinutes(0);\n  clone.setSeconds(0);\n  clone.setMilliseconds(0);\n  return clone;\n}\n\nexport function dateToString(date: Date) {\n  const year = date.getFullYear();\n  const month: string = (date.getMonth() + 1).toString().padStart(2, '0');\n  const day: string = (date.getDate()).toString().padStart(2, '0');\n\n  return `${year}/${month}/${day}`;\n}\n\nexport function addMonth(date: Date, months: number): Date {\n  date.setMonth(date.getMonth() + months);\n  return date;\n}\n\nexport function addDay(date: Date, days: number): Date {\n  date.setDate(date.getDate() + days);\n  return date;\n}\n\nexport function addSecond(date: Date, seconds: number): Date {\n  date.setSeconds(date.getSeconds() + seconds);\n  return date;\n}\n\nexport function monthDiff(date2: Date, date1: Date): number {\n  const yearDiff = date2.getFullYear() - date1.getFullYear();\n  return (yearDiff * 12) + date2.getMonth() - date1.getMonth();\n}\n\nexport function dayDiff(date2: Date, date1: Date): number {\n  const date1Clone = cloneAndSet12AM(date1);\n  const date2Clone = cloneAndSet12AM(date2);\n\n  return Math.ceil((date2Clone.getTime() - date1Clone.getTime()) / 86400000);\n}\n\nexport function secondDiff(date2: Date, date1: Date): number {\n  return Math.floor((date2.getTime() - date1.getTime()) / 1000);\n}\n\nexport function setDay1AndMidnight(date: Date): Date {\n  date.setDate(1);\n  date.setUTCHours(9);\n  date.setUTCMinutes(0);\n  date.setUTCSeconds(0);\n  date.setUTCMilliseconds(0);\n  return date;\n}\n\nexport function secondsToString(seconds: number): string {\n  const sec = (seconds % 60).toString().padStart(2, '0');\n  const minutes = Math.floor(seconds / 60);\n\n  const min = (minutes % 60).toString().padStart(2, '0');\n  const hours = Math.floor(minutes / 60);\n\n  const hour = (hours % 24).toString().padStart(2, '0');\n  const days = Math.floor(hours / 24);\n\n  return `${days}일 ${hour}시간 ${min}분 ${sec}초`;\n}\n","import {\n  PRIVATE_MAX_GRADE,\n  PRIVATE_FIRST_MAX_GRADE,\n  CORPORAL_MAX_GRADE,\n  PRIVATE_REDUCE_DATE,\n  PRIVATE_FIRST_REDUCE_DATE,\n  CORPORAL_REDUCE_DATE,\n} from 'src/envs';\nimport { Person, PersonDao, Rank } from 'src/models';\nimport * as dateUtil from './date-util';\n\ninterface PromotionDates {\n  join: Date;\n  transfer: Date;\n  privateFirst: Date;\n  corporal: Date;\n  sergeant: Date;\n  discharge: Date;\n}\n\nfunction rankToKorean(rank: Rank) {\n  switch (rank) {\n    case Rank.human: return '민간인';\n    case Rank.trainee: return '훈련병';\n    case Rank.private: return '이병';\n    case Rank.privateFirst: return '일병';\n    case Rank.corporal: return '상병';\n    case Rank.sergeant: return '병장';\n    case Rank.fulfilled: return '예비역';\n    default: throw new Error('Unexpected value');\n  }\n}\n\nfunction calcMaxGrade(rank: Rank.private | Rank.privateFirst | Rank.corporal, join: Date): number {\n  switch (rank) {\n    case Rank.private: {\n      const extraGrade = join.getTime() < PRIVATE_REDUCE_DATE.getTime() ? 1 : 0;\n      return PRIVATE_MAX_GRADE + extraGrade;\n    }\n    case Rank.privateFirst: {\n      const extraGrade = join.getTime() < PRIVATE_FIRST_REDUCE_DATE.getTime() ? 1 : 0;\n      return PRIVATE_FIRST_MAX_GRADE + extraGrade;\n    }\n    case Rank.corporal: {\n      const extraGrade = join.getTime() < CORPORAL_REDUCE_DATE.getTime() ? 1 : 0;\n      return CORPORAL_MAX_GRADE + extraGrade;\n    }\n    default: throw new Error('Unexpected value');\n  }\n}\n\nfunction calcPromotionDates(person: PersonDao): PromotionDates {\n  const join = new Date(person.join);\n  const transfer = new Date(person.transfer);\n  const discharge = new Date(person.discharge);\n\n  const penalty = [0, 0, 0];\n  person.penalty.forEach((v) => { penalty[v] += 1; });\n  const [privatePenalty, privateFirstPenalty, corporalPenalty] = penalty;\n\n  const privateMaxGrade = calcMaxGrade(Rank.private, join) + privatePenalty;\n  const privateFirstMaxGrade = calcMaxGrade(Rank.privateFirst, join) + privateFirstPenalty;\n  const corporalMaxGrade = calcMaxGrade(Rank.corporal, join) + corporalPenalty;\n\n  const privateFirst = dateUtil.addMonth(new Date(join), privateMaxGrade);\n  const corporal = dateUtil.addMonth(new Date(privateFirst), privateFirstMaxGrade);\n  const sergeant = dateUtil.addMonth(new Date(corporal), corporalMaxGrade);\n  privateFirst.setDate(1);\n  corporal.setDate(1);\n  sergeant.setDate(1);\n\n  return { join, transfer, privateFirst, corporal, sergeant, discharge };\n}\n\nfunction calcStatus(dates: PromotionDates, now: Date) {\n  const { join, transfer, privateFirst, corporal, sergeant, discharge } = dates;\n\n  if (now < join) {\n    return { rank: Rank.human };\n  }\n  if (join <= now && now < transfer) {\n    return { rank: Rank.trainee };\n  }\n  if (transfer <= now && now < privateFirst) {\n    const grade = dateUtil.monthDiff(now, join) + 1;\n    return { grade, rank: Rank.private };\n  }\n  if (privateFirst <= now && now < corporal) {\n    const privateMaxGrade = dateUtil.monthDiff(corporal, privateFirst);\n    const grade = dateUtil.monthDiff(now, privateFirst) + 1;\n    const broken = grade > Math.ceil(privateMaxGrade / 2);\n    return { grade, broken, rank: Rank.privateFirst };\n  }\n  if (corporal <= now && now < sergeant) {\n    const corporalMaxGrade = dateUtil.monthDiff(sergeant, corporal);\n    const grade = dateUtil.monthDiff(now, corporal) + 1;\n    const broken = grade > Math.ceil(corporalMaxGrade / 2);\n    return { grade, broken, rank: Rank.corporal };\n  }\n  if (sergeant <= now && now < discharge) {\n    const grade = dateUtil.monthDiff(now, sergeant) + 1;\n    const totalSergeantDays = dateUtil.dayDiff(discharge, sergeant);\n    const currSergeantDays = dateUtil.dayDiff(now, sergeant);\n    const broken = currSergeantDays > Math.ceil(totalSergeantDays / 2);\n    return { grade, broken, rank: Rank.sergeant };\n  }\n  if (discharge <= now) {\n    return { rank: Rank.fulfilled };\n  }\n  throw new Error('Never happend');\n}\n\nexport default function processPerson(person: PersonDao, now: Date): Person {\n  const promotionDates = calcPromotionDates(person);\n  const { rank, grade, broken } = calcStatus(promotionDates, now);\n  const rankString: string = rankToKorean(rank) + (grade ? ` ${grade}호봉` : '');\n\n  const { join, transfer, discharge } = promotionDates;\n  const daysTotal = dateUtil.dayDiff(discharge, join);\n  const daysPast = Math.min(dateUtil.dayDiff(now, join), daysTotal);\n  const daysLeft = Math.max(dateUtil.dayDiff(discharge, now), 0);\n  const secondsTotal = dateUtil.secondDiff(discharge, join);\n  const secondsPast = Math.min(dateUtil.secondDiff(now, join), secondsTotal);\n  const secondsLeft = Math.max(dateUtil.secondDiff(discharge, now), 0);\n\n  const currMs = now.getTime() - join.getTime();\n  const totalMs = discharge.getTime() - join.getTime();\n  const rate: number = currMs / totalMs;\n  const percent: string = (Math.min(1, Math.max(rate, 0)) * 100).toFixed(2);\n\n  return {\n    join,\n    transfer,\n    discharge,\n    rankString,\n    rank,\n    grade,\n    broken,\n    daysTotal,\n    daysPast,\n    daysLeft,\n    secondsTotal,\n    secondsPast,\n    secondsLeft,\n    percent,\n    name: person.name,\n  };\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport { Person } from 'src/models';\n\nexport enum WelcomeStatus {\n  showing = 'showing',\n  closing = 'closing',\n  closed = 'closed',\n}\n\ninterface Props {\n  person: Person;\n  status: WelcomeStatus;\n  onTransitionEnd: (event: React.TransitionEvent<HTMLDivElement>) => void;\n}\n\nexport default ({ person, status, onTransitionEnd }: Props) => {\n  const { daysTotal, daysLeft, daysPast, broken, rank } = person;\n\n  // y = (total - (1 / total) * x^2) / 8\n  const blurLevel = (daysTotal - (1 / daysTotal) * (daysPast ** 2)) / 8;\n\n  const titleClasses = classnames('title', `rank-${rank}`, { broken });\n  const dateClasses = classnames('date', `rank-text-${rank}`, { broken });\n  const textShadow = { textShadow: `white 0 0 ${blurLevel}px` };\n\n  return (\n    <div id=\"welcome-layout\" className={status} onTransitionEnd={onTransitionEnd}>\n      <div id=\"welcome\">\n        <div className={titleClasses} style={textShadow}><strong>전역</strong></div>\n        <div className={dateClasses}>\n          D-\n          <strong>{daysLeft}</strong>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport { Person } from 'src/models';\nimport { dateUtil } from 'src/utils';\nimport { CAN_DISCHARGE_DAY } from 'src/envs';\n\nconst { dateToString } = dateUtil;\n\ninterface Props {\n  person: Person;\n}\n\nexport default ({ person }: Props) => {\n  const { name, join, transfer, discharge, rank, rankString, broken, daysLeft, percent } = person;\n\n  const canDischarge = daysLeft < CAN_DISCHARGE_DAY;\n  const dates = `${dateToString(join)} 입대 - ${dateToString(transfer)} 전입 - ${dateToString(discharge)} 전역`;\n\n  return (\n    <div id=\"info-pane\" className=\"panel\">\n      <div className={classnames('panel-heading', `rank-${rank}`, { broken })} />\n      <div className=\"panel-body\">\n        <div className=\"name-info\">\n          <strong className=\"name\">{name}</strong>\n          <span className=\"rank\">{rankString}</span>\n          <div>\n            당신의 전역은\n            {' '}\n            <span className={classnames('bold', canDischarge ? 'dischargable' : 'not-dischargable')}>\n              {canDischarge ? '가능' : '불가'}\n            </span>\n            합니다.\n          </div>\n        </div>\n        <div className=\"date-info\">\n          <div className=\"dday\">\n            <div className={classnames('hex', `rank-${rank}`, { broken })}>\n              D-0x\n              <span className=\"bold\">\n                {daysLeft.toString(16).toUpperCase()}\n                <sub>(16)</sub>\n              </span>\n            </div>\n            <span className=\"percentage\">\n              {percent}\n              %\n            </span>\n          </div>\n          <div>\n            {dates}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport { dateUtil } from 'src/utils';\nimport { Person } from 'src/models';\n\nconst { dateToString, secondsToString } = dateUtil;\n\ninterface Props {\n  index: number;\n  person: Person;\n  isMe: boolean;\n}\n\nexport default ({ index, person, isMe }: Props) => {\n  const {\n    rank,\n    rankString,\n    broken,\n    percent,\n    daysPast,\n    daysTotal,\n    secondsPast,\n    secondsLeft,\n  } = person;\n\n  const active = !['fulfilled', 'human'].includes(rank.toString());\n  const progressParentClasses = classnames('progress', {\n    active,\n    'progress-striped': active,\n  });\n  const progressClasses = classnames(\n    'progress-bar',\n    `rank-${rank}`,\n    { broken },\n  );\n\n  const textInside = parseInt(percent) > 20;\n  const progressTextClass = classnames('text', textInside ? 'inside' : 'outside');\n  const progressTextContent = `${daysPast}/${daysTotal} (${percent}%)`;\n  const progressText = (daysPast > 0)\n    ? <span className={progressTextClass}>{progressTextContent}</span>\n    : null;\n\n  return (\n    <tr className={classnames({ me: isMe })}>\n      <td>{index + 1}</td>\n      <td>{person.name}</td>\n      <td>{rankString}</td>\n      <td>{dateToString(person.join)}</td>\n      <td>{dateToString(person.transfer)}</td>\n      <td>{dateToString(person.discharge)}</td>\n      <td>{secondsToString(secondsPast)}</td>\n      <td>{secondsToString(secondsLeft)}</td>\n      <td>\n        <div className={progressParentClasses}>\n          <div className={progressClasses} style={{ width: `${percent}%` }}>{textInside && progressText}</div>\n          {textInside || progressText}\n        </div>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from 'src/models';\nimport PeopleRow from './PeopleRow';\n\ninterface Props {\n  me: Person;\n  persons: Person[];\n}\n\nexport default ({ me, persons }: Props) => {\n  const rows = persons.map((person, i) => {\n    const isMe = person.name === me.name && person.join === me.join;\n    return <PeopleRow index={i} person={person} isMe={isMe} key={person.name + person.join} />;\n  });\n\n  return (\n    <div id=\"people-table\">\n      <table className=\"table table-striped table-hover\">\n        <thead>\n          <tr>\n            <th className=\"no\">#</th>\n            <th className=\"name\">이름</th>\n            <th className=\"rank\">계급</th>\n            <th className=\"date-start\">입대일</th>\n            <th className=\"date-transfer\">전입일</th>\n            <th className=\"date-end\">전역일</th>\n            <th className=\"days-past\">지난시간</th>\n            <th className=\"days-left\">남은시간</th>\n            <th className=\"progressbar\">{' '}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rows}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport classnames from 'classnames';\nimport axios, { AxiosResponse } from 'axios';\n\nimport { FULFILLED_REMAIN_DAYS, WELCOME_SHOW_MILLIS, DISCHARGE_START_DATE } from './envs';\nimport { Header, InfoPane, PeopleTable, WelcomeOverlay } from './components';\nimport { WelcomeStatus } from './components/WelcomeOverlay';\nimport { Person, PersonDao } from './models';\nimport { dateUtil, processToPerson } from './utils';\nimport './App.scss';\n\nexport default function App() {\n  const [welcomeStatus, setWelcomeStatus] = useState(WelcomeStatus.showing);\n  const [people, setPeople] = useState([] as PersonDao[]);\n  const [now, setNow] = useState(new Date());\n\n  useEffect(() => {\n    axios({ url: 'http://home.hyunsub.kim:4284' })\n      .then((res: AxiosResponse) => {\n        setPeople(res.data);\n      });\n\n    setInterval(\n      () => setNow((n) => dateUtil.addSecond(new Date(n), 1)),\n      1000,\n    );\n\n    setTimeout(() => setWelcomeStatus(WelcomeStatus.closing), WELCOME_SHOW_MILLIS);\n  }, []);\n\n  const onRangeChnage = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(e.target.value);\n    const n = dateUtil.addDay(new Date(), value);\n    setNow(n);\n  }, []);\n\n  const persons: Person[] = people\n    .filter((p) => dateUtil.dayDiff(now, new Date(p.discharge)) < FULFILLED_REMAIN_DAYS)\n    .filter((p) => new Date(p.transfer) < now)\n    .map((p) => processToPerson(p, now));\n\n  if (persons.length === 0) {\n    return <div />;\n  }\n\n  const me = persons[0];\n\n  const min = dateUtil.dayDiff(new Date(DISCHARGE_START_DATE), new Date());\n  const max = (people.length > 0)\n    ? dateUtil.dayDiff(new Date(people[people.length - 1].discharge), new Date())\n    : dateUtil.dayDiff(new Date(Date.now() + 1), new Date());\n  const value = dateUtil.dayDiff(now, new Date());\n\n  return (\n    <>\n      <WelcomeOverlay\n        person={me}\n        status={welcomeStatus}\n        onTransitionEnd={() => setWelcomeStatus(WelcomeStatus.closed)}\n      />\n      <Header className={classnames({ blur: welcomeStatus !== WelcomeStatus.closed })} />\n      <div className={classnames('container-fluid', { blur: welcomeStatus !== WelcomeStatus.closed })} style={{ marginTop: '60px' }}>\n        <InfoPane person={me} />\n        <h1>{now.toLocaleString()}</h1>\n        <input type=\"range\" min={min} max={max} value={value} onChange={onRangeChnage} />\n        <PeopleTable me={me} persons={persons} />\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}